/*
 * Ability Options LLC App
 * This servers hosts API needed for Ability Options LLC.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ability.model;

import java.util.List;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;

/**
 * A Employee detail
 */
@JsonInclude(Include. NON_NULL)
@AllArgsConstructor
@NoArgsConstructor
@Data
@ToString
public class Employee {
    @JsonProperty("employee_id")
    private Integer employeeId;

    @JsonProperty("email_address")
    private String emailAddress;

    @JsonProperty("personal_info")
    private PersonalInfo personalInfo;

    @JsonProperty("emergency_contact")
    private EmergencyContact emergencyContact;

    @JsonProperty("transport_info")
    private TransportInfo transportInfo;

    @JsonProperty("availability")
    private Availability availability;

    @JsonProperty("education")
    private List<Education> education;

    @JsonProperty("task_review_info")
    private TaskReviewInfo taskReviewInfo;

    @JsonProperty("experience")
    private List<Experience> experience;

    @JsonProperty("reference")
    private List<Reference> reference;

    /**
     * Gets or Sets isVisited
     */
    public enum IsVisitedEnum {
        YES("YES"), NO("NO");

        private String value;

        IsVisitedEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static IsVisitedEnum fromValue(String input) {
            for (IsVisitedEnum b : IsVisitedEnum.values()) {
                if (b.value.equals(input)) {
                    return b;
                }
            }
            return null;
        }

    }

    @JsonProperty("is_visited")
    private IsVisitedEnum isVisited;

    /**
     * Gets or Sets isConsentSigned
     */
    public enum IsConsentSignedEnum {
        YES("YES"), NO("NO");

        private String value;

        IsConsentSignedEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static IsConsentSignedEnum fromValue(String input) {
            for (IsConsentSignedEnum b : IsConsentSignedEnum.values()) {
                if (b.value.equals(input)) {
                    return b;
                }
            }
            return null;
        }

    }

    @JsonProperty("is_consent_signed")
    private IsConsentSignedEnum isConsentSigned;

    @JsonProperty("active_tab_index")
    private String activeTabIndex;

    @JsonProperty("signature")
    private String signature;

}
